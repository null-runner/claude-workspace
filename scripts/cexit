#!/bin/bash
# Claude Exit - Graceful exit con smart-sync automatico
# Usa questo comando invece di 'exit' per avere graceful exit automatico

WORKSPACE_DIR="$HOME/claude-workspace"

# Colori
CYAN='\033[0;36m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

echo -e "${CYAN}🪝 Claude Exit - avvio graceful exit...${NC}"
echo ""

# Cambia alla directory workspace se non ci siamo già
if [[ "$(pwd)" != "$WORKSPACE_DIR" ]]; then
    cd "$WORKSPACE_DIR" 2>/dev/null || {
        echo -e "${RED}❌ Errore: impossibile accedere a $WORKSPACE_DIR${NC}"
        echo -e "${YELLOW}💡 Proseguo con exit normale...${NC}"
        exit "$@"
    }
fi

# Controlla se lo script smart-exit esiste
if [[ ! -f "$WORKSPACE_DIR/scripts/claude-smart-exit.sh" ]]; then
    echo -e "${RED}❌ Smart-exit script non trovato${NC}"
    echo -e "${YELLOW}💡 Proseguo con exit normale...${NC}"
    exit "$@"
fi

# Esegui smart exit con modalità automatica
echo -e "${BLUE}🚀 Executing smart exit...${NC}"
echo ""
"$WORKSPACE_DIR/scripts/claude-smart-exit.sh" --auto

# Se arriviamo qui, smart-exit ha completato - ora FORZA l'exit
echo ""
echo -e "${GREEN}✅ Graceful exit completato - FORZANDO terminazione Claude Code...${NC}"
echo -e "${YELLOW}⏳ Preparazione terminazione forzata...${NC}"
sleep 1
echo ""

# STRATEGIA ULTRA-AGGRESSIVA per exit garantito
echo -e "${BLUE}🎯 Analizzando processi...${NC}"

# Trova Claude con precisione
CLAUDE_PID=$(ps -eo pid,cmd | awk '$2 == "claude" {print $1}' | head -1)

if [[ -n "$CLAUDE_PID" ]]; then
    echo -e "${BLUE}🎯 Trovato Claude PID: $CLAUDE_PID${NC}"
    echo ""
    
    # METODO 1: Kill process group (più efficace contro thread multipli)
    echo -e "${CYAN}🔥 Sending SIGTERM to process group...${NC}"
    kill -TERM -"$CLAUDE_PID" 2>/dev/null
    echo -e "${CYAN}⏳ Waiting for graceful shutdown...${NC}"
    sleep 1
    
    # METODO 2: Se ancora vivo, kill SIGKILL su process group  
    if kill -0 "$CLAUDE_PID" 2>/dev/null; then
        echo -e "${YELLOW}💀 Process still running - sending SIGKILL to group...${NC}"
        kill -KILL -"$CLAUDE_PID" 2>/dev/null
        echo -e "${YELLOW}⏳ Force killing process group...${NC}"
        sleep 1
    else
        echo -e "${GREEN}✅ Process group terminated gracefully${NC}"
    fi
    
    # METODO 3: Kill diretto se ancora resiste
    if kill -0 "$CLAUDE_PID" 2>/dev/null; then
        echo -e "${RED}🔥 Process still alive - direct kill...${NC}"
        kill -KILL "$CLAUDE_PID" 2>/dev/null
        echo -e "${RED}⏳ Force killing main process...${NC}"
        sleep 0.5
    fi
    
    # METODO 4: Nuklea tutti i processi claude
    echo -e "${RED}☢️  Final cleanup - nuking all claude processes...${NC}"
    pkill -KILL -f "claude" 2>/dev/null
    echo -e "${RED}⏳ System-wide cleanup...${NC}"
    sleep 0.5
    
else
    echo -e "${YELLOW}⚠️  Claude PID non trovato - proceeding with direct exit${NC}"
    sleep 0.5
fi

echo ""
echo -e "${GREEN}🎯 Termination sequence completed${NC}"
echo -e "${BLUE}🚀 EXEC EXIT - bye bye!${NC}"
sleep 0.3
exec bash -c "echo 'Process terminated successfully'; exit ${1:-0}"
