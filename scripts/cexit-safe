#!/bin/bash
# Claude Exit Safe - Graceful exit con terminazione sicura
# Versione più sicura che non forza kill del processo

WORKSPACE_DIR="$HOME/claude-workspace"

# Colori
CYAN='\033[0;36m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

echo -e "${CYAN}🪝 Claude Exit Safe - avvio graceful exit...${NC}"
echo ""

# Cambia alla directory workspace se non ci siamo già
if [[ "$(pwd)" != "$WORKSPACE_DIR" ]]; then
    cd "$WORKSPACE_DIR" 2>/dev/null || {
        echo -e "${RED}❌ Errore: impossibile accedere a $WORKSPACE_DIR${NC}"
        echo -e "${YELLOW}💡 Proseguo con exit normale...${NC}"
        exit "$@"
    }
fi

# Controlla se lo script smart-exit esiste
if [[ ! -f "$WORKSPACE_DIR/scripts/claude-smart-exit.sh" ]]; then
    echo -e "${RED}❌ Smart-exit script non trovato${NC}"
    echo -e "${YELLOW}💡 Proseguo con exit normale...${NC}"
    exit "$@"
fi

# Esegui smart exit con modalità automatica
echo -e "${BLUE}🚀 Executing smart exit...${NC}"
"$WORKSPACE_DIR/scripts/claude-smart-exit.sh" --auto

# Graceful exit completato
echo -e "${GREEN}✅ Graceful exit completato!${NC}"

# CLEANUP: Termina smart-sync daemon se attivo (anche con cexit-safe)
echo -e "${CYAN}🧹 Cleaning up smart-sync daemon...${NC}"
SYNC_PID_FILE="$WORKSPACE_DIR/.claude/sync/smart-sync.pid"
if [[ -f "$SYNC_PID_FILE" ]]; then
    SYNC_PID=$(cat "$SYNC_PID_FILE")
    if [[ -n "$SYNC_PID" ]] && kill -0 "$SYNC_PID" 2>/dev/null; then
        echo -e "${CYAN}🛑 Stopping smart-sync daemon (PID: $SYNC_PID)...${NC}"
        kill -TERM "$SYNC_PID" 2>/dev/null
        sleep 1
        if kill -0 "$SYNC_PID" 2>/dev/null; then
            kill -KILL "$SYNC_PID" 2>/dev/null
        fi
        echo -e "${GREEN}✅ Smart-sync daemon stopped${NC}"
    fi
    rm -f "$SYNC_PID_FILE"
fi

echo -e "${BLUE}💡 Ora puoi chiudere manualmente Claude Code o usare Ctrl+C${NC}"
echo -e "${YELLOW}🎯 Per exit forzato, usa: ./scripts/cexit${NC}"
echo ""
echo -e "${CYAN}📋 SUMMARY:${NC}"
echo -e "   💾 Session salvata"
echo -e "   🔄 Smart-sync eseguito"
echo -e "   📤 Repository aggiornato"
echo -e "   🧹 Daemon cleanup eseguito"
echo -e "   ✅ Workspace pulito e pronto"
echo ""

# Non esce - lascia che l'utente gestisca manualmente